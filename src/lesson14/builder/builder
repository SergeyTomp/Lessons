Строитель (Builder) - порождающий шаблон проектирования,
который выделяет процесс создания сложного объекта так,
чтобы различные реализации строителя могли бы создавать
различные реализации объекта.

В классическом варианте состоит из:
Builder - абстрактный строитель, определяющий интерфейс

Concrete Builder - предоставляет конкретную реализацию строителя.
Конкретный строитель создает и собирает части объекта в единое целое.

Director - класс Директора отвечает за задание корректной
последовательности конструирования объекта.
Класс получает Конкретного Строителя, как параметр,
и выполняет необходимые операции с ним.

Product - конечный продукт. Создается Директором с помощью
Коннкретного Строителя

Мотивы применения паттерна:
алгоритм создания сложного объекта не должен зависеть от того,
из каких частей состоит объект и как они стыкуются между собой

процесс конструирования должен обеспечивать различные
представления конструируемого объекта

Плюсы применения паттерна Строитель:
изолирует код, реализующий конструирование и представление
предоставляет полный контроль над процессом создания объекта
позволяет независимо изменять ход процесса создания объекта


Паттерн широко используется в стандартных библиотеках Java.
Например,
java.lang.StringBuilder#append() (unsynchronized)
java.lang.StringBuffer#append() (synchronized)